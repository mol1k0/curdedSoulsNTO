using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class Curse : MonoBehaviour
{


    Animator anim;
    CurseSpawner spawner;
    public Transform pos;
    public Transform[] spawnPos;
    public GameObject[] enemies;
    bool teleportReload = false;
    bool skeletonSpawnReload = false;
    [SerializeField] int spawnCount;

    public GameObject dieVFX;
    public Image healthBar;
    public float health;
    float maxHealth;



    void Awake(){
        anim = GetComponent<Animator>();
        spawner = FindObjectOfType<CurseSpawner>();
    }

    void Start(){
        StartCoroutine(SkeletonsSpawnReload());

        maxHealth = health;
    }

    void Teleport(){
        anim.SetTrigger("teleport");
        StartCoroutine(TeleportTransform());
        StartCoroutine(TeleportRelaod());
    }

    void Spawn(){
        StartCoroutine(SkeletonsSpawnReload());

        spawnCount = Random.Range(3, 6);
        for (int i = 0; i < spawnCount; i++){
            Transform currentPos = spawnPos[Random.Range(0, spawnPos.Length)];
            GameObject currentEnemy = enemies[Random.Range(0, enemies.Length)];
            Instantiate(currentEnemy, currentPos.position, Quaternion.identity);
        }
    }

    public void Damage(float damage){
        health -= damage;

        healthBar.fillAmount = health / maxHealth;
        if (damage <= 0){
            spawner.curseSpawned = false;
            Instantiate(dieVFX, transform.position, Quaternion.identity);
            Destroy(gameObject);
        }
    }

    IEnumerator TeleportTransform(){
        yield return new WaitForSeconds(1f);
        transform.position = pos.position;
    }

    IEnumerator TeleportRelaod(){
        yield return new WaitForSeconds(8f);
        teleportReload = false;
    }

    IEnumerator SkeletonsSpawnReload(){
        yield return new WaitForSeconds(8f);
        teleportReload = false;
        Spawn();
    }

    private void OnTriggerStay2D(Collider2D other){
        if (other.gameObject.tag == "player"){
            Vector2 newPos = new Vector2(2 * transform.position.x - other.transform.position.x, 2 * transform.position.y - other.transform.position.y);
            pos.transform.position = newPos;
            if (!teleportReload){
                teleportReload = true;
                Teleport();
            }
        }
     }
}
